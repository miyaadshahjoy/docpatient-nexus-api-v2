{
  "openapi": "3.0.0",
  "info": {
    "title": "DocPatient Nexus API",
    "version": "2.0.0",
    "description": "DocPatient Nexus is a modern, scalable RESTful API that bridges the gap between patients and healthcare providers through an intelligent, role-based medical appointment management system. Designed with security, performance, and flexibility in mind, it empowers clinics, hospitals, and telemedicine platforms to streamline doctor-patient interactions.\n\nAt its core, the API provides seamless scheduling, real-time availability tracking, appointment confirmation and cancellation workflows, payment processing via Stripe, and robust access control for Super Admins, Admins, Doctors, and Patients. With dynamic validation, modular architecture, and industry-standard security practices (JWT, CORS, HTTPS-ready), DocPatient Nexus is built to scale from small clinics to enterprise-grade hospital systems.\n\n> Whether you're integrating into a mobile health app, a web-based clinic portal, or a hospital ERP system, this API is your backend workhorseâ€”reliable, extendable, and well-documented.\n\nðŸ§© Key Features:\n\n* Smart doctor availability scheduling\n* Role-based access control (RBAC + Identity-based access)\n* Patient appointment booking with dynamic slot validation\n* Secure payment processing with Stripe integration\n* Appointment status tracking: pending â†’ confirmed â†’ completed/cancelled\n* Automated refund and cancellation logic\n* Admin dashboards for healthcare staff & clinic management\n* Email notifications to keep doctors and patients in the loop\n* Built with Node.js, Express, MongoDB, Mongoose, and Stripe\n\nðŸš€ Designed For:\n\n* Telehealth startups\n* Clinics and hospital chains\n* Appointment scheduling apps\n* Healthcare SaaS platforms\n* Developer teams needing a plug-and-play health backend\n\n      \n",
    "contact": {
      "name": "Miyaad Shah Joy",
      "email": "docpatientnexus@example.com"
    }
  },
  "servers": [
    {
      "url": "https://docpatient-nexus.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "Admin": {
        "type": "object",
        "required": [
          "fullName",
          "email",
          "phone",
          "gender",
          "password",
          "passwordConfirm"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "682787f1fea3f44089558cd5"
          },
          "fullName": {
            "type": "string",
            "example": "Ahsan Habib"
          },
          "email": {
            "type": "string",
            "example": "ahsan.habib@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+8801712345678"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "others",
              "prefer not to say"
            ],
            "example": "male"
          },
          "profilePhoto": {
            "type": "string",
            "example": "https://example.com/photos/ahsan_habib.jpg"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "passwordConfirm": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "super-admin"
            ],
            "default": "admin",
            "example": "admin"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "pending",
              "removed"
            ],
            "example": "pending"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          },
          "emailVerified": {
            "type": "boolean",
            "example": false
          },
          "passwordChangedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-02T14:20:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-02T14:20:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-02T14:20:00.000Z"
          }
        }
      },
      "Doctor": {
        "type": "object",
        "required": [
          "fullName",
          "email",
          "phone",
          "gender",
          "password",
          "passwordConfirm",
          "education",
          "specialization",
          "experience",
          "location",
          "visitingSchedule",
          "consultationFees"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "682787f1fea3f44089558cd6"
          },
          "fullName": {
            "type": "string",
            "example": "Zarif Hossain"
          },
          "email": {
            "type": "string",
            "example": "zarif.hossain@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+880 1720 111234"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "others",
              "prefer not to say"
            ],
            "example": "male"
          },
          "profilePhoto": {
            "type": "string",
            "example": "https://cdn.example.com/images/zarif.jpg"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "passwordConfirm": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "specialization": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Cardiology",
              "Internal Medicine"
            ]
          },
          "experience": {
            "type": "number",
            "example": 10
          },
          "education": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "degree",
                "institute"
              ],
              "properties": {
                "degree": {
                  "type": "string",
                  "example": "MBBS"
                },
                "institute": {
                  "type": "string",
                  "example": "Dhaka Medical College"
                }
              }
            }
          },
          "averageRating": {
            "type": "number",
            "minimum": 1,
            "maximum": 5,
            "example": 4.8
          },
          "location": {
            "type": "object",
            "required": [
              "type",
              "coordinates"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "Point"
                ],
                "example": "Point"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "example": [
                  90.389,
                  23.746
                ]
              },
              "city": {
                "type": "string",
                "example": "Dhaka"
              },
              "address": {
                "type": "string",
                "example": "Green Road, Dhaka"
              }
            }
          },
          "visitingSchedule": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "string",
                  "enum": [
                    "saturday",
                    "sunday",
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday"
                  ],
                  "example": "monday"
                },
                "hours": {
                  "type": "object",
                  "required": [
                    "from",
                    "to"
                  ],
                  "properties": {
                    "from": {
                      "type": "string",
                      "example": "09:00"
                    },
                    "to": {
                      "type": "string",
                      "example": "17:00"
                    }
                  }
                }
              }
            }
          },
          "consultationFees": {
            "type": "number",
            "example": 1000
          },
          "appointmentDuration": {
            "type": "number",
            "example": 60
          },
          "role": {
            "type": "string",
            "enum": [
              "doctor"
            ],
            "example": "doctor"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "pending",
              "removed"
            ],
            "example": "pending"
          },
          "emailVerified": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          },
          "passwordChangedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:08.776Z"
          },
          "numRating": {
            "type": "number",
            "example": 10
          }
        }
      },
      "Patient": {
        "type": "object",
        "required": [
          "fullName",
          "email",
          "phone",
          "gender",
          "password",
          "passwordConfirm",
          "bloodGroup",
          "dateOfBirth",
          "location"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "682787f1fea3f44089558cd7"
          },
          "fullName": {
            "type": "string",
            "example": "Sadia Rahman"
          },
          "email": {
            "type": "string",
            "example": "sadia.rahman@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+8801712345679"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "others",
              "prefer not to say"
            ],
            "example": "female"
          },
          "profilePhoto": {
            "type": "string",
            "example": "https://example.com/sadia-profile.jpg"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "passwordConfirm": {
            "type": "string",
            "format": "password",
            "example": "pass1234"
          },
          "bloodGroup": {
            "type": "string",
            "enum": [
              "A+",
              "B+",
              "O+",
              "A-",
              "B-",
              "O-",
              "AB+",
              "AB-"
            ],
            "example": "B+"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1992-03-10"
          },
          "medicalHistory": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Thyroid Disorder",
              "Anemia"
            ]
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Shellfish",
              "Pollen"
            ]
          },
          "currentMedications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Levothyroxine",
              "Iron Supplements"
            ]
          },
          "location": {
            "type": "object",
            "required": [
              "city",
              "address"
            ],
            "properties": {
              "city": {
                "type": "string",
                "example": "Dhaka"
              },
              "address": {
                "type": "string",
                "example": "House 12, Road 5, Dhanmondi, Dhaka 1205"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "pending",
              "removed"
            ],
            "example": "pending"
          },
          "role": {
            "type": "string",
            "enum": [
              "patient"
            ],
            "example": "patient"
          },
          "isVerified": {
            "type": "boolean",
            "example": false
          },
          "emailVerified": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          },
          "passwordChangedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:08.776Z"
          }
        }
      },
      "Medication": {
        "type": "object",
        "required": [
          "name",
          "dosage",
          "frequency",
          "duration"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Aspirin"
          },
          "dosage": {
            "type": "string",
            "example": "500mg"
          },
          "frequency": {
            "type": "string",
            "example": "Twice a day"
          },
          "duration": {
            "type": "number",
            "example": 7
          },
          "instruction": {
            "type": "string",
            "example": "Take with water, do not exceed the recommended dosage."
          }
        }
      },
      "Prescription": {
        "type": "object",
        "required": [
          "doctor",
          "patient",
          "appointment",
          "medications"
        ],
        "properties": {
          "doctor": {
            "type": "string",
            "example": "682787f1fea3f44089558cd6"
          },
          "patient": {
            "type": "string",
            "example": "682787f1fea3f44089558cd7"
          },
          "appointment": {
            "type": "string",
            "example": "682787f1fea3f44089558cd8"
          },
          "notes": {
            "type": "string",
            "example": "Take the medication after meals."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "expired",
              "deleted"
            ],
            "default": "active"
          },
          "medications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Medication"
            },
            "example": [
              {
                "name": "Aspirin",
                "dosage": "500mg",
                "frequency": "Twice a day",
                "duration": 7,
                "instruction": "Take with water, do not exceed the recommended dosage."
              },
              {
                "name": "Paracetamol",
                "dosage": "500mg",
                "frequency": "Once a day",
                "duration": 5,
                "instruction": "Take after meals."
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          }
        }
      },
      "Appointment": {
        "type": "object",
        "required": [
          "doctor",
          "patient",
          "appointmentDate",
          "appointmentSchedule"
        ],
        "properties": {
          "doctor": {
            "type": "string",
            "example": "682787f1fea3f44089558cd6"
          },
          "patient": {
            "type": "string",
            "example": "682787f1fea3f44089558cd7"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-16T09:00:00.000Z"
          },
          "appointmentSchedule": {
            "type": "object",
            "required": [
              "day",
              "hours"
            ],
            "properties": {
              "day": {
                "type": "string",
                "example": "monday"
              },
              "hours": {
                "type": "object",
                "required": [
                  "from",
                  "to"
                ],
                "properties": {
                  "from": {
                    "type": "string",
                    "example": "09:00"
                  },
                  "to": {
                    "type": "string",
                    "example": "09:59"
                  }
                }
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "confirmed",
              "cancelled",
              "completed"
            ],
            "default": "confirmed"
          },
          "reason": {
            "type": "string",
            "example": "Regular blood pressure check-up and follow-up consultation"
          },
          "notes": {
            "type": "string",
            "example": "Patient has been advised to bring previous test reports."
          },
          "consultationType": {
            "type": "string",
            "enum": [
              "in-person",
              "online"
            ],
            "default": "in-person"
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "paid",
              "unpaid"
            ],
            "default": "unpaid"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "card",
              "cash"
            ],
            "default": "card"
          },
          "paymentIntent": {
            "type": "string",
            "example": "pi_1HV8XK2eZvKYlo2C5pFAKE123"
          },
          "isPrescribed": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          }
        }
      },
      "Review": {
        "type": "object",
        "required": [
          "doctor",
          "patient",
          "appointment",
          "review",
          "rating"
        ],
        "properties": {
          "doctor": {
            "type": "string",
            "example": "682787f1fea3f44089558cd6"
          },
          "patient": {
            "type": "string",
            "example": "682787f1fea3f44089558cd7"
          },
          "appointment": {
            "type": "string",
            "example": "682787f1fea3f44089558cd8"
          },
          "review": {
            "type": "string",
            "example": "Dr. Rafiq was very attentive and explained everything clearly. I felt genuinely cared for during my consultation."
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "reply": {
            "type": "string",
            "example": "Thank you for your kind feedback. We're glad to hear about your experience!"
          },
          "isEdited": {
            "type": "boolean",
            "default": false
          },
          "status": {
            "type": "string",
            "enum": [
              "visible",
              "flagged",
              "hidden"
            ],
            "default": "visible"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          }
        }
      },
      "PatientRecord": {
        "type": "object",
        "required": [
          "patient"
        ],
        "properties": {
          "patient": {
            "type": "string",
            "example": "682787f1fea3f44089558cd6"
          },
          "allergies": {
            "type": "array",
            "example": [
              "Peanuts",
              "Penicillin"
            ]
          },
          "conditions": {
            "type": "array",
            "example": [
              "Hypertension",
              "Type 2 Diabetes"
            ]
          },
          "surgeries": {
            "type": "array",
            "example": [
              "Appendectomy (2010)",
              "Gallbladder removal (2016)"
            ]
          },
          "familyHistory": {
            "type": "array",
            "example": [
              "Father - Heart disease",
              "Mother - Type 2 Diabetes"
            ]
          },
          "lifestyle": {
            "type": "object",
            "properties": {
              "badHabits": {
                "type": "array",
                "example": [
                  "smoking"
                ]
              },
              "exercise": {
                "type": "string",
                "example": "moderate"
              }
            }
          },
          "medications": {
            "type": "array",
            "example": [
              "682787f1fea3f44089558cd7",
              "682787f1fea3f44089558cd8"
            ]
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "title",
                "fileUrl",
                "issuedBy",
                "issuedOn"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Blood Test Report"
                },
                "fileUrl": {
                  "type": "string",
                  "example": "https://example.com/reports/bloodtest_jan2025.pdf"
                },
                "issuedBy": {
                  "type": "string",
                  "example": "Dr. Nafisa Rahman"
                },
                "issuedOn": {
                  "type": "string",
                  "example": "2025-01-15T00:00:00.000Z"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-16T18:46:09.776Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-05-31T02:45:43.207Z"
          }
        }
      }
    },
    "responses": {
      "InternalServerError": {
        "description": "Internal server error. Something went wrong while processing your request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later."
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Super-Admins",
      "description": "Operations related to super admins"
    },
    {
      "name": "Admins",
      "description": "Operations related to admins"
    },
    {
      "name": "Doctors",
      "description": "Operations related to doctors"
    },
    {
      "name": "Patients",
      "description": "Operations related to patients"
    },
    {
      "name": "Appointments",
      "description": "Operations related to appointments"
    },
    {
      "name": "Prescriptions",
      "description": "Operations related to prescriptions"
    },
    {
      "name": "Reviews",
      "description": "Operations related to reviews"
    },
    {
      "name": "Payments",
      "description": "Operations related to payments"
    }
  ],
  "paths": {
    "/api/v2/super-admins/signin": {
      "post": {
        "tags": [
          "Super-Admins"
        ],
        "summary": "Super Admin Sign In",
        "description": "Allows a super-admin to sign in using email and password. After sigining in use the `jwt` token to access the protected routes.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "miyaadjoy@docpatientnexus.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Super-Admin signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT token here"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "superAdmin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password. Please provide valid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Enter correct email and password to sign in."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/super-admins/approve-admins/{adminId}": {
      "patch": {
        "tags": [
          "Super-Admins"
        ],
        "summary": "Approve Admin Account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a super-admin to approve an admin account by ID. The admin must be in a pending state. Requires a valid `JWT` token with super-admin privileges.",
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4f3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin account approved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Admin account is already approved or does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Admin account is already approved or does not exist."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin account not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No admin found with the provided ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/": {
      "post": {
        "tags": [
          "Admins"
        ],
        "summary": "Register a new admin account.",
        "description": "Allows a new admin to register by providing necessary credentials and profile details. After registration, you will have to verify your email through the `/api/v2/admins/email-verification` endpoint. Initially your account will be in a `pending` state. After verification, your account will be `active` and you can log in.",
        "operationId": "signupAdmin",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Ahsan Habib"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ahsan.habib@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^\\+?[0-9]{10,15}$",
                    "example": "+8801712345678"
                  },
                  "gender": {
                    "type": "string",
                    "example": "male"
                  },
                  "profilePhoto": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/photos/ahsan_habib.jpg"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Passwords do not match"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email or phone number already in use.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exists. Please use a different email."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/signin": {
      "post": {
        "tags": [
          "Admins"
        ],
        "summary": "Admin Sign In",
        "description": "Allows an admin to sign in using email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ahsan.habib@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT token here"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password. Please provide valid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Enter correct email and password to sign in."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please verify your email before accessing the system"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access due to account status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account is pending approval by an admin or has been removed. Please contact support."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/email-verification": {
      "post": {
        "tags": [
          "Admins"
        ],
        "summary": "Send email verification link",
        "description": "Sends an `email verification link` to the adminsâ€™s registered email address. The email address is also sent along with the verification token. Collect the token from the email and use it to verify your email using the `/api/v2/admins/email-verification/{token}` endpoint. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/admins/email-verification` endpoint. <br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "sendEmailVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "asif.hossain@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification link sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verification link sent successfully. Please check your inbox."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid email format or missing email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format or missing email. Please provide a valid email address."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No admin found with the provided email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No admin found with the provided email address. Please check the email and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/email-verification/{token}": {
      "patch": {
        "tags": [
          "Admins"
        ],
        "summary": "Verify adminâ€™s email.",
        "description": "Verifies the adminâ€™s email using the token sent to their email address. Collect the token from the email and use it in the parameters section to verify your email. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/admins/email-verification` endpoint.<br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "verifyAdminEmail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Email verification token",
            "schema": {
              "type": "string",
              "example": "verification-token-here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid or expired token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired email verificaion token. Please request a new verification link."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No admin found with the provided token or token does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No verfication token found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/me": {
      "get": {
        "tags": [
          "Admins"
        ],
        "summary": "Get currently logged in admin profile.",
        "description": "**Fetches the profile information of the currently logged in admin. The admin must be `logged in` and have a valid `JWT` token.**",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Admin profile fetched successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid input or validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input. Please provide valid profile information."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Admin must be logged in with a valid JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You must be logged in to update your profile."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Admin does not have permission to update profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to update this profile."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Admins"
        ],
        "summary": "Update Admin Profile.",
        "description": "Allows an admin to update their profile information. The admin must be `logged in` and have a valid `JWT` token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Ahsan Habib"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "ahsan.habib@example.com"
                  },
                  "phone": {
                    "type": "String",
                    "pattern": "^\\+?[0-9]{10,15}$",
                    "example": "+8801712345678"
                  },
                  "profilePhoto": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/photos/ahsan_habib.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin profile updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "$ref": "#/components/schemas/Admin"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid input or validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input. Please provide valid profile information."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Admin must be logged in with a valid JWT token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You must be logged in to update your profile."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Admin does not have permission to update profile.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to update this profile."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admins"
        ],
        "summary": "Delete Admin Account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "**Allows an admin to delete their own account. The admin must be `logged in` with a valid `JWT` token.**",
        "responses": {
          "204": {
            "description": "Admin account deleted successfully."
          },
          "401": {
            "description": "Unauthorized access. Admin must be logged in with a valid `JWT` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You must be logged in to delete your account."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Admin does not have permission to delete this account.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to delete this account."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/approve-doctors/{doctorId}": {
      "patch": {
        "tags": [
          "Admins"
        ],
        "summary": "Approve Doctor Account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows an admin with an active and verified account to approve a doctor account by ID. The doctor must be in a pending state. Requires a valid `JWT` token with admin privileges.",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4f3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Doctor account approved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctor": {
                          "$ref": "#/components/schemas/Doctor"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Doctor account is already approved or does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Doctor account is already approved or does not exist."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please verify your email before accessing the system"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access due to account status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to approve doctor accounts."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Doctor account not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found with the provided ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/admins/approve-patients/{patientId}": {
      "patch": {
        "tags": [
          "Admins"
        ],
        "summary": "Approve patient account.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows an admin with an active and verified account to approve a patient account by ID. The patient must be in a pending state. Requires a valid `JWT` token with admin privileges",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4f3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patient account approved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Patient account is already approved or does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Patient account is already approved or does not exist."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please verify your email before accessing the system"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access due to account status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to approve patient accounts."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient account not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Get all doctors.",
        "description": "Retrieve a list of all registered doctors",
        "operationId": "getDoctors",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order of the results (e.g., \"experience,-averageRating\")",
            "required": false,
            "schema": {
              "type": "string",
              "default": "-averageRating"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to include in the response (e.g., \"fullName,experience,specialization,education,location\")",
            "required": false,
            "schema": {
              "type": "string",
              "default": "fullName,experience,specialization,education,location,averageRating"
            }
          },
          {
            "name": "experience[gte]",
            "in": "query",
            "description": "Filter doctors with experience greater than or equal to the specified value",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "experience[lte]",
            "in": "query",
            "description": "Filter doctors with experience less than or equal to the specified value",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "averageRating[gte]",
            "in": "query",
            "description": "Filter doctors with average rating greater than or equal to the specified value",
            "required": false,
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "averageRating[lte]",
            "in": "query",
            "description": "Filter doctors with average rating less than or equal to the specified value",
            "required": false,
            "schema": {
              "type": "number",
              "default": 5
            }
          },
          {
            "name": "specialization",
            "in": "query",
            "description": "Filter doctors by specialization (e.g., \"Cardiology,Neurology\")",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched all doctors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "results": {
                      "type": "integer",
                      "example": 3
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctors": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Doctor"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid query parameters provided. Check your request."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctors found matching the provided criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctors found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/{id}": {
      "get": {
        "tags": [
          "Doctors"
        ],
        "summary": "Get a single doctor by ID",
        "description": "Retrieve details of a specific doctor by their ID",
        "operationId": "getDoctorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the doctor to retrieve",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the doctor's details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctor": {
                          "$ref": "#/components/schemas/Doctor"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid doctor ID."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Doctors"
        ],
        "summary": "Update a Doctor by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update a specific Doctor by their `ID`. This endpoint is accessible to `logged-in` Admins only.",
        "operationId": "updateDoctorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the Doctor to update",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Zarif Hossain"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zarif.hossain@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+880 1720 111234"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "others",
                      "prefer not to say"
                    ]
                  },
                  "profilePhoto": {
                    "type": "string",
                    "example": "https://cdn.example.com/images/zarif.jpg"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "education": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "degree",
                        "institute"
                      ],
                      "properties": {
                        "degree": {
                          "type": "string",
                          "example": "MBBS"
                        },
                        "institute": {
                          "type": "string",
                          "example": "Dhaka Medical College"
                        }
                      }
                    }
                  },
                  "specialization": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Cardiology",
                      "Internal Medicine"
                    ]
                  },
                  "experience": {
                    "type": "number",
                    "example": 10
                  },
                  "averageRating": {
                    "type": "number",
                    "example": 4.5
                  },
                  "location": {
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point"
                        ],
                        "example": "Point"
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "example": [
                          90.389,
                          23.746
                        ]
                      },
                      "city": {
                        "type": "string",
                        "example": "Dhaka"
                      },
                      "address": {
                        "type": "string",
                        "example": "Green Road, Dhaka"
                      }
                    }
                  },
                  "visitingSchedule": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "string",
                          "enum": [
                            "saturday",
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday"
                          ],
                          "example": "monday"
                        },
                        "hours": {
                          "type": "object",
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "type": "string",
                              "example": "09:00"
                            },
                            "to": {
                              "type": "string",
                              "example": "17:00"
                            }
                          }
                        }
                      }
                    }
                  },
                  "appointmentDuration": {
                    "type": "number",
                    "example": 60
                  },
                  "consultationFees": {
                    "type": "number",
                    "example": 1000
                  },
                  "role": {
                    "type": "string",
                    "example": "doctor"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "pending",
                      "removed"
                    ],
                    "example": "active"
                  },
                  "isVerified": {
                    "type": "boolean",
                    "example": true
                  },
                  "isEmailVerified": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the doctor.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctor": {
                          "$ref": "#/components/schemas/Doctor"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing `ID`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid doctor ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found with the provided ID. Please check the ID and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Doctors"
        ],
        "summary": "Delete a doctor by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete a specific doctor by their `ID`. This endpoint is accessible to `logged-in` Admins only.",
        "operationId": "deleteDoctorById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the doctor to delete",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the doctor."
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing `ID`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid doctor ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found with the provided ID. Please check the ID and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/signup": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Register a new doctor account.",
        "description": "Allows a new doctor to register by providing necessary credentials and profile details. After registration, you will have to verify you email through the `/api/v2/doctors/email-verification` endpoint. Initially your account will be in a `pending` state. After verification, your account will be `active` and you can log in.",
        "operationId": "signupDoctor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fullName",
                  "email",
                  "phone",
                  "gender",
                  "password",
                  "passwordConfirm",
                  "specialization",
                  "experience",
                  "education",
                  "location",
                  "visitingSchedule",
                  "consultationFees"
                ],
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Zarif Hossain"
                  },
                  "email": {
                    "type": "string",
                    "example": "zarif.hossain@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+880 1720 111234"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "others",
                      "prefer not to say"
                    ],
                    "example": "female"
                  },
                  "profilePhoto": {
                    "type": "string",
                    "example": "https://cdn.example.com/images/zarif.jpg"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "specialization": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Cardiology",
                      "Internal Medicine"
                    ]
                  },
                  "experience": {
                    "type": "number",
                    "example": 10
                  },
                  "education": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "degree",
                        "institute"
                      ],
                      "properties": {
                        "degree": {
                          "type": "string",
                          "example": "MBBS"
                        },
                        "institute": {
                          "type": "string",
                          "example": "Dhaka Medical College"
                        }
                      }
                    }
                  },
                  "location": {
                    "type": "object",
                    "required": [
                      "type",
                      "coordinates"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point"
                        ],
                        "example": "Point"
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "example": [
                          90.389,
                          23.746
                        ]
                      },
                      "city": {
                        "type": "string",
                        "example": "Dhaka"
                      },
                      "address": {
                        "type": "string",
                        "example": "Green Road, Dhaka"
                      }
                    }
                  },
                  "visitingSchedule": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "day": {
                          "type": "string",
                          "enum": [
                            "saturday",
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday"
                          ],
                          "example": "monday"
                        },
                        "hours": {
                          "type": "object",
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "type": "string",
                              "example": "09:00"
                            },
                            "to": {
                              "type": "string",
                              "example": "17:00"
                            }
                          }
                        }
                      }
                    }
                  },
                  "consultationFees": {
                    "type": "number",
                    "example": 1000
                  },
                  "appointmentDuration": {
                    "type": "number",
                    "example": 60
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doctor registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctor": {
                          "$ref": "#/components/schemas/Doctor"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Passwords do not match"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email or phone number already in use.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exists. Please use a different email."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/signin": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Doctor Sign In",
        "description": "Allows a doctor to sign in using email and password. If your email is `not verified`, you will not be able to sign in. Verify your email using the `/api/v2/doctors/email-verification` endpoint. If your account is pending approval by the admin, you will not be able to sign in.<br><br>After successfully logging in use the `jwt` token from the response to authenticate or authorize for accessing protected routes.",
        "operationId": "signinDoctor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zarif.hossain@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Doctor signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "doctor": {
                          "$ref": "#/components/schemas/Doctor"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password. Please provide valid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Enter correct email and password to sign in."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please verify your email before accessing the system"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access due to account status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account is pending approval by an admin or has been removed. Please contact support."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/email-verification": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Send email verification link",
        "description": "Sends an `email verification link` to the doctorâ€™s registered email address. The email address is also sent along with the verification token. Collect the token from the email and use it to verify your email using the `/api/v2/doctors/email-verification/{token}` endpoint. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/doctors/email-verification` endpoint. <br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "sendEmailVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zarif.hossain@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification link sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verification link sent successfully. Please check your inbox."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid email format or missing email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format or missing email. Please provide a valid email address."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found with the provided email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found with the provided email address. Please check the email and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/email-verification/{token}": {
      "patch": {
        "tags": [
          "Doctors"
        ],
        "summary": "Verify doctorâ€™s email.",
        "description": "Verifies the doctorâ€™s email using the token sent to their email address. Collect the token from the email and use it in the parameters section to verify your email. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/doctors/email-verification` endpoint.<br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "verifyDoctorEmail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Email verification token",
            "schema": {
              "type": "string",
              "example": "verification-token-here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid or expired token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired email verificaion token. Please request a new verification link."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found with the provided token or token does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No verfication token found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/patients/{patientId}/records": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Create a patient-record for a patient.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a doctor to `create a patient-record` for a patient. A doctor must be `logged in` to use this route.",
        "operationId": "createPatientRecord",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "ID of the patient to create a patient-record for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "type": "object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allergies": {
                    "type": "array",
                    "example": [
                      "Peanuts",
                      "Penicillin"
                    ]
                  },
                  "conditions": {
                    "type": "array",
                    "example": [
                      "Hypertension",
                      "Type 2 Diabetes"
                    ]
                  },
                  "surgeries": {
                    "type": "array",
                    "example": [
                      "Appendectomy (2010)",
                      "Gallbladder removal (2016)"
                    ]
                  },
                  "familyHistory": {
                    "type": "array",
                    "example": [
                      "Father - Heart disease",
                      "Mother - Type 2 Diabetes"
                    ]
                  },
                  "lifestyle": {
                    "type": "object",
                    "properties": {
                      "badHabits": {
                        "type": "array",
                        "example": [
                          "smoking"
                        ]
                      },
                      "exercise": {
                        "type": "string",
                        "example": "moderate"
                      }
                    }
                  },
                  "medications": {
                    "type": "array",
                    "example": [
                      "64fc8e27b12d5a9cfdcdef20",
                      "64fc8e27b12d5a9cfdcdef21"
                    ]
                  },
                  "reports": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "example": "Blood Test Report"
                        },
                        "fileUrl": {
                          "type": "string",
                          "example": "https://example.com/reports/bloodtest_jan2025.pdf"
                        },
                        "issuedBy": {
                          "type": "string",
                          "example": "Dr. Nafisa Rahman"
                        },
                        "issuedOn": {
                          "type": "string",
                          "example": "2025-01-15T00:00:00.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient record created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Patient record created successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patientRecord": {
                          "$ref": "#/components/schemas/PatientRecord"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Record already exists for this patient."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only `logged-in Doctors` can access this route. Log in with a valid `jwt` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access. Please log in to continue."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only `logged-in Doctors` can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Doctors"
        ],
        "summary": "Update a patient-record for a patient.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a doctor to `update a patient-record` for a patient. A doctor must be `logged in` to use this route.<br><br>**Note:** In order to update a patient-record, the patient must have an existing patient-record. A patient-record can be created by a doctor using the `/doctors/patients/{patientId}/records` route.",
        "operationId": "updatePatientRecord",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "ID of the patient to update a patient-record for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Hematology Analysis Report"
                  },
                  "issuedBy": {
                    "type": "string",
                    "example": "Dr. Nafisa Rahman"
                  },
                  "issuedOn": {
                    "type": "string",
                    "formate": "date-time",
                    "example": "2025-06-02T17:49:00+06:00"
                  },
                  "record": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient record updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Patient report uploaded successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patientRecord": {
                          "$ref": "#/components/schemas/PatientRecord"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing required fields in request body."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only `logged-in Doctors` can access this route. Log in with a valid `jwt` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized access. Please log in to continue."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only `logged-in Doctors` can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No record found for this patient."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/appointments/{appointmentId}/prescription/": {
      "post": {
        "tags": [
          "Doctors"
        ],
        "summary": "Create a prescription for an appointment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a doctor to `create a prescription` for an appointment. A doctor must be `logged in` to use this route.",
        "operationId": "createPrescription",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "ID of the appointment to create a prescription for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "medications"
                ],
                "properties": {
                  "notes": {
                    "type": "string",
                    "example": "Patient advised to continue medications for 7 days and return for follow-up if symptoms persist."
                  },
                  "medications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Medication"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Prescription created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Prescription created successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Prescription already exists for this appointment."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only `logged-in Doctors` can access this route. Log in with a valid `jwt` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this route. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only `logged-in Doctors` can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have the permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No appointment found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No appointment found with the provided ID."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/signup": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Register a new patient account.",
        "description": "Allows a new patient to register by providing necessary credentials and profile details. After registration, you will have to verify you email through the `/api/v2/patients/email-verification` endpoint. Initially your account will be in a `pending` state. After verification, your account will be `active` and you can log in.",
        "operationId": "signupPatient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Passwords do not match"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email or phone number already in use.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exists. Please use a different email."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/signin": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Patient Sign In",
        "description": "Allows a patient to sign in using email and password. If your email is `not verified`, you will not be able to sign in. Verify your email using the `/api/v2/patients/email-verification` endpoint. If your account is pending approval by the admin, you will not be able to sign in.<br><br>After successfully logging in use the `jwt` token from the response to authenticate or authorize for accessing protected routes.",
        "operationId": "signinPatient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "farzana.nahar@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patient signed in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password. Please provide valid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Enter correct email and password to sign in."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Please verify your email before accessing the system"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access due to account status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account is pending approval by an admin or has been removed. Please contact support."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/email-verification": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Send email verification link",
        "description": "Sends an `email verification link` to the patientâ€™s registered email address. The email address is also sent along with the verification token. Collect the token from the email and use it to verify your email using the `/api/v2/patients/email-verification/{token}` endpoint. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/patients/email-verification` endpoint. <br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "sendEmailVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "farzana.nahar@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verification link sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verification link sent successfully. Please check your inbox."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid email format or missing email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format or missing email. Please provide a valid email address."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided email address. Please check the email and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/email-verification/{token}": {
      "patch": {
        "tags": [
          "Patients"
        ],
        "summary": "Verify patientâ€™s email.",
        "description": "Verifies the patientâ€™s email using the token sent to their email address. Collect the token from the email and use it in the parameters section to verify your email. The verfication token is valid for 10 minutes. After that, the token will expire and you will have to request a new token using the `/api/v2/patients/email-verification` endpoint.<br><br>**Note**: The email verification token could be long. Make sure to copy the entire token from the email.",
        "operationId": "verifyPatientEmail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Email verification token",
            "schema": {
              "type": "string",
              "example": "verification-token-here"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verified successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid or expired token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired email verificaion token. Please request a new verification link."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided token or token does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No verfication token found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get all registered patients",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": " This endpoint allows `logged-in` Admins or Doctors to retrieve all the registered patietnts in the system.",
        "operationId": "getPatients",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort order of the results (e.g., \"fullName,email,-dateOfBirth\")",
            "schema": {
              "type": "string",
              "example": "-dateOfBirth"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to include in the response (e.g., \"fullName,email,gender,dateOfBirth,location\")",
            "schema": {
              "type": "string",
              "example": "fullName,email,gender,dateOfBirth,location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all patients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "results": {
                      "type": "integer",
                      "example": 3
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patients": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Patient"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid query parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid query parameters provided. Check your request."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins and Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patients found matching the provided criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patients found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get a single patient by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Retrieve details of a specific patient by their `ID`. This endpoint is accessible to `logged-in` Admins or Doctors only.",
        "operationId": "getPatientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the patient to retrieve",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the patients's details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing `ID`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid patient ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Patients"
        ],
        "summary": "Update a patient by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Update a specific patient by their `ID`. This endpoint is accessible to `logged-in` Admins or Doctors only.",
        "operationId": "updatePatientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the patient to update",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sadia Rahman"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "sadin.rahman@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+8801234567890"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "male",
                      "female",
                      "other",
                      "prefer not to say"
                    ],
                    "example": "male"
                  },
                  "profilePhoto": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/profile-photo.jpg"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "passwordConfirm": {
                    "type": "string",
                    "format": "password",
                    "example": "pass1234"
                  },
                  "bloodGroup": {
                    "type": "string",
                    "example": "O+"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "example": "1990-01-01"
                  },
                  "medicalHistory": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Diabetes, Hypertension, Asthma"
                    }
                  },
                  "allergies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Penicillin, Nuts"
                    }
                  },
                  "currentMedications": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Metformin, Lisinopril"
                    }
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point"
                        ],
                        "example": "Point"
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "example": [
                          23.8103,
                          90.4125
                        ]
                      },
                      "city": {
                        "type": "string",
                        "example": "Dhaka"
                      },
                      "address": {
                        "type": "string",
                        "example": "123 Main St, Dhaka, Bangladesh"
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "active",
                        "pending",
                        "removed"
                      ],
                      "example": "active"
                    },
                    "role": {
                      "type": "string",
                      "example": "patient"
                    },
                    "isVerified": {
                      "type": "boolean",
                      "example": false
                    },
                    "emailVerified": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the patient.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "patient": {
                          "$ref": "#/components/schemas/Patient"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing `ID`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid patient ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided ID. Please check the ID and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "summary": "Delete a patient by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Delete a specific patient by their `ID`. This endpoint is accessible to `logged-in` Admins or Doctors only.",
        "operationId": "deletePatientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the patient to delete",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the patient."
          },
          "400": {
            "description": "Bad request. Possibly due to invalid ID format or missing `ID`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid ID format or missing ID. Please provide a valid patient ID."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this resource. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged in Admins or Doctors can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No patient found with the provided ID. Please check the ID and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No patient found with the provided ID. Please check the ID and try again."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/me": {
      "get": {
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "summary": "Get currently logged in patient profile.",
      "description": "Get details of the currently logged in patient. This endpoint is accessible to `logged-in` patients only."
    },
    "/api/v2/patients/doctors/{doctorId}/available-visiting-hours": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Get available visiting hours for a doctor.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Get `available visiting hours` for a doctor. The visiting hours are displayed in 24-hour format. You have to provide a `valid date` to get available visiting hours on the provided date.<br><br>This endpoint is accessible to `logged-in` patients only.",
        "operationId": "getAvailableVisitingHours",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "required": true,
            "description": "ID of the doctor",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "example": "2025-08-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved all available visiting hours.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Available visiting time slots retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "example": "2025-06-16"
                        },
                        "visitingDay": {
                          "type": "string",
                          "example": "monday"
                        },
                        "visitingHours": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "string",
                                "example": "09:00"
                              },
                              "to": {
                                "type": "string",
                                "example": "09:59"
                              },
                              "available": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format. Please provide a valid date in YYYY-MM-DD format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or passed date. Please provide a valid date"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in patients can access this route. Log in with a valid jwt token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this route. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged-in patients can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to access this route."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found matching the provided ID",
            "content": {
              "application/json": {
                "500": {
                  "description": "Internal server error. Something went wrong while processing your request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Something went wrong. Please try again later."
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/doctors/{doctorId}/book-appointment": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Book an appointment with a doctor.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a patient to `book an appointment` with a doctor. The patient must be `logged in` to use this route. The patient enters a `valid date` and an `available time slot` to book an appointment with the doctor.",
        "operationId": "bookAppointment",
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "description": "ID of the doctor to book an appointment with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "appointmentDate": {
                    "type": "string",
                    "example": "2025-06-16"
                  },
                  "appointmentSchedule": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "string",
                        "example": "monday"
                      },
                      "hours": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "string",
                            "example": "09:00"
                          },
                          "to": {
                            "type": "string",
                            "example": "09:59"
                          }
                        }
                      }
                    }
                  },
                  "reason": {
                    "type": "string",
                    "example": "Regular blood pressure check-up and follow-up consultation"
                  },
                  "notes": {
                    "type": "string",
                    "example": "Patient has been advised to bring previous test reports."
                  },
                  "consultationType": {
                    "type": "string",
                    "example": "in-person"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment successfully booked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Appointment created successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "appointment": {
                          "$ref": "#/components/schemas/Appointment"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date format. Please provide a valid date in YYYY-MM-DD format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid or passed date. Please provide a valid date"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in patients can access this route. Log in with a valid jwt token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this route. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged-in patients can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No doctor found matching the provided ID",
            "content": {
              "application/json": {
                "500": {
                  "description": "Internal server error. Something went wrong while processing your request.",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Something went wrong. Please try again later."
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No doctor found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/appointments/{appointmentId}/reviews": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Post a review for an appointment.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Allows a patient to `post a review` for an appointment. The patient must be `logged in` to use this route.",
        "operationId": "postReview",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "ID of the appointment to post a review for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "review": {
                    "type": "string",
                    "example": "Dr. Rafiq was very attentive and explained everything clearly. I felt genuinely cared for during my consultation."
                  },
                  "rating": {
                    "type": "number",
                    "example": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review posted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Review created successfully."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "review": {
                          "$ref": "#/components/schemas/Review"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation failed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in patients can access this route. Log in with a valid `jwt` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this route. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged-in patients can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not allowed to post a review here."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No appointment found with provided ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No appointment found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/doctors/appointments/{appointmentId}/prescription": {
      "post": {
        "tags": [
          "Prescription"
        ],
        "summary": "Create a prescription for a patient.",
        "description": "**Allows a doctor to create a prescription for a patient after an appointment.**",
        "operationId": "createPrescription",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "required": true,
            "description": "ID of the appointment for which the prescription is created",
            "schema": {
              "type": "string",
              "example": "60c72b2f9b1e8b001c8e4d3a"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "medications"
                ],
                "properties": {
                  "medications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Medication"
                    }
                  },
                  "notes": {
                    "type": "string",
                    "example": "Take the medication after meals."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Prescription created successfully. Returns the created prescription details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "prescription": {
                          "$ref": "#/components/schemas/Prescription"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possibly due to missing required fields or invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input data. Please ensure all required fields are provided and correctly formatted."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Doctor must be authenticated to create a prescription.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You must be signed in as a doctor to create a prescription."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No appointment found with the provided ID or appointment does not belong to the doctor.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No appointment found with the provided ID or the appointment does not exist."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/patients/payments/checkout-session": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a checkout session for an appointment.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "createCheckoutSession",
        "description": "Allows a patient to create a checkout session for an appointment. The patient must be `logged in` to use this route. Log in with a valid `jwt` token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "appointment"
                ],
                "properties": {
                  "appointment": {
                    "type": "string",
                    "example": "64b8e3b9c1b2c4b8e3b9c1b2"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Checkout session created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Checkout session created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "session": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "cs_test_a15j3Mq8p9KIXYIHUob4TiPEf1vJZZdIvLB2XBubeTMhU3Ig44on4WBhn2"
                            },
                            "object": {
                              "type": "string",
                              "example": "checkout.session"
                            },
                            "amount_subtotal": {
                              "type": "integer",
                              "example": 80000
                            },
                            "amount_total": {
                              "type": "integer",
                              "example": 80000
                            },
                            "currency": {
                              "type": "string",
                              "example": "bdt"
                            },
                            "customer_email": {
                              "type": "string",
                              "example": "farzana.nahar@example.com"
                            },
                            "client_reference_id": {
                              "type": "string",
                              "description": "The appointment ID"
                            },
                            "cancel_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://localhost:3000"
                            },
                            "success_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://127.0.0.1:3000"
                            },
                            "expires_at": {
                              "type": "integer",
                              "description": "Unix timestamp of session expiration",
                              "example": 1750510918
                            },
                            "livemode": {
                              "type": "boolean",
                              "example": false
                            },
                            "mode": {
                              "type": "string",
                              "example": "payment"
                            },
                            "payment_status": {
                              "type": "string",
                              "example": "unpaid"
                            },
                            "payment_method_types": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "card"
                              ]
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "Stripe-hosted checkout URL",
                              "example": "https://checkout.stripe.com/c/pay/cs_test_a15j3Mq8p9KIXYIHUob4TiPE..."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid appointment ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "This appointment has already been paid for."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. Only logged-in patients can access this route. Log in with a valid `jwt` token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to access this route. Please log in."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. Only logged-in patients can access this route.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "You do not have permission to perform this action."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Appointment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "fail"
                    },
                    "message": {
                      "type": "string",
                      "example": "No appointment is booked with this ID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Something went wrong while processing your request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong. Please try again later."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}